DONE 1 - gérer le nombre d'argument de ./minishell avec les erreurs -->  Tristan

DONE 1a- vérifier si les quotes sont toutes fermés !!!!!!!!!!!!!!!!!!!!!!!! faut renomer la func first_quote pour etre plus general d ailleurs on peut
surement utiliser ft_strchr a la place  ---- 

DONE 2 - séparer lorsqu'il y a un pipe == changer de structure
    si erreur de pipe c'est prio 0
    si non erreur 2a
DONE 2a -  création de structure

DONE 3 - interpréter les variables $ sauf si 'single quote'

DONE 3a - Recuperer in files et out files en laissant quote + remove des redir dans le cmd --> TRISTAN

DONE 3b - separer args en laissant quotes  --> a voir

Il va falloir reflechir a bouger l interpretation des vars, le fait que les variable qui n existe pas laisse rien pose probleme au moment de spater les redir
Du genre :   <$lala lolo      donnera : 01=lolo
faudrait faire l interpretation apres avoir remplis les tableaux cmd_arg et redir et a ce moment on peut verifier si y a une ambigous redirect

3 c -suprimer les quotes  --> NIL

4 - HEREDOC

5 - PIPEX

5 - REDIRECTION parsing à l'ouverture

6 - BUILTNGS

/*

< sidfhif      <<  pofdgu
sidfhif	<  pofdgu

< fjkdng     <<
2=fjkdng     2=fdsfk	1=   
<<d <<f 	< g  <h	>>  <  >

d f g h

<g <<f << d < h
g f d h 

ouvrir g 

< sdf  < rg <  << < < 
<<  < '<' < <

while char *
 if << 
 tab 0
 	1
 	
 while char *
 if << 
 tab 0
  */
  
Quote 
char **
cmd_arg | in | out

"'bla'"' sdf'  'bla' sdf

" jsd fsfsd"  ->   jsd fsfsd




chercher le < si deuxieme status = 1;
on passe white space si le charactere est chevron ou \n ou | erreur et le token c est le chevron trouver apres wite space
